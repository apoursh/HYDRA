{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine."
        }
      },
      "dnsNameForPublicIP": {
        "type": "string",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_F2",
        "metadata": {
          "description": "VM size for the Docker host."
        },
        "allowedValues": [
          "Standard_F1",
          "Standard_F2",
          "Standard_D2_V3",
          "Standard_D4_V3"
        ]
      },
      "ubuntuOSVersion": {
        "type": "string",
        "defaultValue": "16.04.0-LTS",
        "metadata": {
          "description": "The Ubuntu version for deploying the Docker containers. This will pick a fully patched image of this given Ubuntu version. Allowed values: 14.04.4-LTS, 15.10, 16.04.0-LTS"
        },
        "allowedValues": [
          "14.04.4-LTS",
          "15.10",
          "16.04.0-LTS"
        ]
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "password",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        }
      },
      "resourcePrefix": {
        "type": "string",
        "defaultValue": "csa",
        "metadata": {
            "description": "Short Prefix (3 characters or less) for storage resources created by this template"
        }
      }
    },
    "variables": {
      "imagePublisher": "Canonical",
      "imageOffer": "UbuntuServer",
      "OSDiskName": "osdiskfordockersimple",
      "nicName": "spokeVMNicD",
      "extensionName": "DockerExtension",
      "addressPrefix": "10.0.0.0/16",
      "subnetName": "Subnet",
      "subnetPrefix": "10.0.0.0/24",
      "diskStorageType": "Standard_LRS",
      "publicIPAddressName": "spokePublicIPD",
      "publicIPAddressType": "Dynamic",
      "vmName": "spokeDockerVM",
      "virtualNetworkName": "spokeVNETD",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordOrKey')]"
            }
          ]
        }
      },
      "networkSecurityGroupName": "default-NSG",
      "ingestStorageAccountName": "[concat('ingest', parameters('resourcePrefix'), uniqueString(subscription().subscriptionId))]",
      "preprocessStorageAccountName": "[concat('prepro', parameters('resourcePrefix'), uniqueString(subscription().subscriptionId))]",
      "storageAccountType": "Standard_LRS",
      "storageKind": "StorageV2",
      "storageAccessTier": "Hot",
      "storageSupportsHttpsTrafficOnly": true,
      "storageIsHnsEnabled": true,
      "storageLargeFileSharesState": "Enabled"
    },
    "resources": [
      {
        "apiVersion": "2017-04-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
          }
        }
      },
      {
        "comments": "Default Network Security Group for template",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2019-08-01",
        "name": "[variables('networkSecurityGroupName')]",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-22",
              "properties": {
                "priority": 1000,
                "access": "Allow",
                "direction": "Inbound",
                "destinationPortRange": "22",
                "protocol": "Tcp",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2017-04-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2017-04-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                },
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2017-03-30",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[variables('vmName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[variables('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPasswordOrKey')]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[parameters('ubuntuOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "[concat(variables('vmName'),'_OSDisk')]",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "[variables('diskStorageType')]"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(variables('vmName'),'/', variables('extensionName'))]",
        "apiVersion": "2017-03-30",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "DockerExtension",
          "typeHandlerVersion": "1.0",
          "autoUpgradeMinorVersion": true,
          "settings": {}
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[variables('ingestStorageAccountName')]",
        "location": "[parameters('location')]",
        "dependsOn": [],
        "tags": {
            "Spoke Storage Ingest ": "Ingest"
        },
        "sku": {
            "name": "[variables('storageAccountType')]"
        },
        "kind": "[variables('storageKind')]",
        "properties": {
            "accessTier": "[variables('storageAccessTier')]",
            "supportsHttpsTrafficOnly": "[variables('storageSupportsHttpsTrafficOnly')]",
            "isHnsEnabled": "[variables('storageIsHnsEnabled')]",
            "largeFileSharesState": "[variables('storageLargeFileSharesState')]"
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[variables('preprocessStorageAccountName')]",
        "location": "[parameters('location')]",
        "dependsOn": [],
        "tags": {
            "Spoke Storage Ingest ": "Preprocess"
        },
        "sku": {
            "name": "[variables('storageAccountType')]"
        },
        "kind": "[variables('storageKind')]",
        "properties": {
            "accessTier": "[variables('storageAccessTier')]",
            "supportsHttpsTrafficOnly": "[variables('storageSupportsHttpsTrafficOnly')]",
            "isHnsEnabled": "[variables('storageIsHnsEnabled')]",
            "largeFileSharesState": "[variables('storageLargeFileSharesState')]"
        }
      }
    ]
  }